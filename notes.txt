-For the purposes of training, a function will accept a list argument.
This list argument will be a list of emails from the 'emails' dictionary
entry below. We won't have to worry about generating term counts until we
do the classifier steps (see the B* and M* parts below which start out
as 0's in the email parsing step).


This should be the format of the dictionary returned from the parser
module's primary function.

{
  'vocabSize' : 00,
  'classCount' : {
                   'Social' : 00,
                   'Shopping' : 00,
                   'Spam' : 00,
                   'Other' : 00
                 },
  'docCount' : 00,
  'termCounts' : {
                   t1 : [
                          // You should initialize these to 0's - the B and M
                          // are just there to let you know what these mean.
                          [B*, M*], // SOCIAL_INDEX
                          [B*, M*], // SHOPPING_INDEX
                          [B*, M*], // SPAM_INDEX
                          [B*, M*], // OTHER_INDEX
                        ]
                   t2 : [ ... ],
                   ...
                   t(n) : [ ... ]
                 },
  'emails' : [ (10 lists in here, one for each group in the 10-fold)
                [
                    {
                        'terms' : ['this', 'contains', 'the', 'email\'s', 'terms'],
                        'truthCategory' : 0,
                        'bernoulliCategory' : 0,
                        'multinomialCategory' : 0
                    }, // there is a dictionary for each email in this group
                    ...
                    { ... }
                ],
                ...
                [ ... ]
             ]
}





*** Starred stuff ***
B* (Bernoulli) - this is the number of documents in the classification that contain
the given term.

M* (Multinomial) - number of times that the term appears in all documents in the given classification.
